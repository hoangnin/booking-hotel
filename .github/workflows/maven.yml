name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
#    env:
#      JWT_SECRET: ${{ secrets.JWT_SECRET }}
#      FRONT_END_HOST: ${{ secrets.FRONT_END_HOST }}
#      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
#      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
#      STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
#      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
#      STRIPE_SIGNING_KEY: ${{ secrets.STRIPE_SIGNING_KEY }}
#      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
#      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
#      SPRING_MAIN_ALLOW_BEAN_DEFINITION_OVERRIDING: "true"
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven (Run Tests)
        run: mvn clean install --no-transfer-progress

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ninxtr/hotel-ci-cd
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy to render
        run: curl ${{ secrets.RENDER_HOOK }}
